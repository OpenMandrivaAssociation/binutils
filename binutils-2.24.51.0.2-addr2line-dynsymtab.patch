--- binutils-2.24.51.0.2/bfd/dwarf2.c.addr2line~	2013-12-13 17:42:48.000000000 +0100
+++ binutils-2.24.51.0.2/bfd/dwarf2.c	2013-12-25 23:01:42.141331956 +0100
@@ -3470,8 +3470,11 @@ find_line (bfd *abfd,
   struct dwarf2_debug *stash;
   /* What address are we looking for?  */
   bfd_vma addr;
+  /* What is the address without relocation ?  */
+  bfd_vma unrelocated_addr;
   struct comp_unit* each;
   bfd_boolean found = FALSE;
+  bfd_vma possible_find = FALSE;
   bfd_boolean do_line;
 
   *filename_ptr = NULL;
@@ -3511,6 +3514,12 @@ find_line (bfd *abfd,
   else
     abort ();
 
+  /* If we are dealing with PIC code then the debug information
+     will be based on unrelocated addresses.  Since we cannot be
+     sure if this is a PIC address we test both with and without
+     relocation.  */
+  unrelocated_addr = addr;
+
   if (section->output_section)
     addr += section->output_section->vma + section->output_offset;
   else
@@ -3556,6 +3565,26 @@ find_line (bfd *abfd,
 					     linenumber_ptr, stash);
 		if (found)
 		  goto done;
+
+	  if (! possible_find)
+	    possible_find = ((each->arange.high == 0
+			      || comp_unit_contains_address (each, unrelocated_addr))
+			     && comp_unit_find_nearest_line (each, unrelocated_addr,
+							     filename_ptr,
+							     functionname_ptr,
+							     linenumber_ptr,
+							     discriminator_ptr,
+							     stash));
+
+	  if (! found && ! do_line && ! possible_find)
+	    possible_find = ((each->arange.high == 0
+			      || comp_unit_contains_address (each, unrelocated_addr))
+			     && comp_unit_find_nearest_line (each, unrelocated_addr,
+							     filename_ptr,
+							     functionname_ptr,
+							     linenumber_ptr,
+							     discriminator_ptr,
+							     stash));
 	      }
 	}
     }
@@ -3721,6 +3750,8 @@ find_line (bfd *abfd,
   if ((abfd->flags & (EXEC_P | DYNAMIC)) == 0)
     unset_sections (stash);
 
+  if (! found)
+    return possible_find;
   return found;
 }
 
--- binutils-2.24.51.0.2/bfd/opncls.c.addr2line~	2013-12-13 17:42:48.000000000 +0100
+++ binutils-2.24.51.0.2/bfd/opncls.c	2013-12-25 22:52:35.680481599 +0100
@@ -1378,6 +1378,8 @@ find_separate_debug_file (bfd *
       bfd_malloc (strlen (debug_file_directory) + 1
                   + (canon_dirlen > dirlen ? canon_dirlen : dirlen)
                   + strlen (".debug/")
+#define FEDORA_LIB_DEBUG_DIR "/usr/lib/debug/"
+		  + strlen (FEDORA_LIB_DEBUG_DIR) + strlen ("usr/")
                   + strlen (base)
                   + 1);
   if (debugfile == NULL)
@@ -1398,6 +1400,26 @@ find_separate_debug_file (bfd *
   if (check_func (debugfile, crc32))
     goto found;
 
+  /* Then try in the global debug dir for Fedora libraries.  */
+  sprintf (debugfile, "%s%s%s", FEDORA_LIB_DEBUG_DIR, dir, base);
+  if (separate_debug_file_exists (debugfile, crc32))
+    {
+      free (base);
+      free (dir);
+      free (canon_dir);
+      return debugfile;
+    }
+
+  /* Then try in the usr subdirectory of the global debug dir for Fedora libraries.  */
+  sprintf (debugfile, "%s/usr%s%s", FEDORA_LIB_DEBUG_DIR, dir, base);
+  if (separate_debug_file_exists (debugfile, crc32))
+    {
+      free (base);
+      free (dir);
+      free (canon_dir);
+      return debugfile;
+    }
+  
   /* Then try in the global debugfile directory.  */
   strcpy (debugfile, debug_file_directory);
   dirlen = strlen (debug_file_directory) - 1;
